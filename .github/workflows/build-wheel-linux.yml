# (C) Copyright 2024- ECMWF.
#
# This software is licensed under the terms of the Apache Licence Version 2.0
# which can be obtained at http://www.apache.org/licenses/LICENSE-2.0.
# In applying this licence, ECMWF does not waive the privileges and immunities
# granted to it by virtue of its status as an intergovernmental organisation
# nor does it submit to any jurisdiction.


name: Build Python Wheel for Linux

on:
  # Trigger the workflow manually
  workflow_dispatch: ~

  # Allow to be called from another workflow
  workflow_call: ~

  # TODO automation trigger
  # repository_dispatch:
  #   types: [eccodes-updated]

jobs:
  build-python-wheel:
    name: Build manylinux_2_28
    runs-on: [self-hosted, Linux, platform-builder-Rocky-8.6]
    container:
      image: dockcross/manylinux_2_28-x64:20250109-7bf589c
      #options: --pull always

    name: Build manylinux_2_28-x64

    steps:
      - uses: actions/checkout@v4

      - run: ./scripts/build-linux.sh

      ################################################################
      - run: ./scripts/wheel-linux.sh 3.8
      - uses: actions/upload-artifact@v4
        name: Upload wheel 3.8
        with:
          name: wheel-manylinux2014-3.8
          path: wheelhouse/*.whl

      # ################################################################
      - run: ./scripts/wheel-linux.sh 3.9
      - uses: actions/upload-artifact@v4
        name: Upload wheel 3.9
        with:
          name: wheel-manylinux2014-3.9
          path: wheelhouse/*.whl

      # ################################################################
      - run: ./scripts/wheel-linux.sh 3.10
      - uses: actions/upload-artifact@v4
        name: Upload wheel 3.10
        with:
          name: wheel-manylinux2014-3.10
          path: wheelhouse/*.whl

      # ################################################################
      - run: ./scripts/wheel-linux.sh 3.11
      - uses: actions/upload-artifact@v4
        name: Upload wheel 3.11
        with:
          name: wheel-manylinux2014-3.11
          path: wheelhouse/*.whl

      # ################################################################
      - run: ./scripts/wheel-linux.sh 3.12
      - uses: actions/upload-artifact@v4
        name: Upload wheel 3.12
        with:
          name: wheel-manylinux2014-3.12
          path: wheelhouse/*.whl

      # ################################################################
      - run: ./scripts/wheel-linux.sh 3.13
      - uses: actions/upload-artifact@v4
        name: Upload wheel 3.13
        with:
          name: wheel-manylinux2014-3.13
          path: wheelhouse/*.whl

  test:

    needs: build

    strategy:
      fail-fast: false
      matrix: # We don't test 3.6, as it is not supported anymore by github actions
        python-version: ["3.8", "3.9", "3.10", "3.11", "3.12", "3.13"]

    runs-on: [self-hosted, Linux, platform-builder-Rocky-8.6]

    name: Test with ${{ matrix.python-version }}

    steps:

      - uses: actions/checkout@v4

      - uses: actions/download-artifact@v4
        with:
          name: wheel-manylinux2014-${{ matrix.python-version }}
  
      - run: ./scripts/test-linux.sh  ${{ matrix.python-version }}


  deploy:

    if: ${{ github.ref_type == 'tag' || github.event_name == 'release' }}

    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11", "3.12", "3.13"]

    needs: [test, build]

    name: Deploy wheel ${{ matrix.python-version }}

    runs-on: [self-hosted, Linux, platform-builder-Rocky-8.6]


    steps:

      - run: mkdir artifact-${{ matrix.python-version }}

      - uses: actions/checkout@v4

      - uses: actions/download-artifact@v4
        with:
          name: wheel-manylinux2014-${{ matrix.python-version }}
          path: artifact-${{ matrix.python-version }}

  build-wrapper-wheel:
    name: Build manylinux_2_28
    runs-on: [self-hosted, Linux, platform-builder-Rocky-8.6]
    container:
      image: eccr.ecmwf.int/wheelmaker/2_28:latest
      credentials:
        username: ${{ secrets.ECMWF_DOCKER_REGISTRY_USERNAME }}
        password: ${{ secrets.ECMWF_DOCKER_REGISTRY_ACCESS_TOKEN }}
    steps:
        # TODO convert this to be matrix-friendly. Note it's a bit tricky since
        # we'd ideally not reexecute the compile step multiple times, but it
        # (non-essentially) depends on a matrix-based step
        # NOTE we dont use action checkout because it doesnt cleanup after itself correctly
      - run: git clone --depth=1 --branch="${GITHUB_REF#refs/heads/}" https://github.com/$GITHUB_REPOSITORY /proj
      - run: cd /proj && /buildscripts/prepare_deps.sh ./buildconfig 3.11
      - run: |
           cd /proj
           export PYTHONPATH=/buildscripts/; export LIBDIR=/tmp/prereqs/eccodeslib/lib64; export INCDIR=/tmp/prereqs/eccodeslib/include
           uv run --python python3.11 python -m build --installer uv --wheel .
      - run: mkdir -p /build/wheel && mv /proj/dist/*whl /build/wheel
      - run: cd /proj && /buildscripts/test-wheel.sh ./python_wrapper/buildconfig 3.11 /build/wheel/*whl
      - run: cd /proj && /buildscripts/upload-pypi.sh /build/wheel/*whl
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
        # NOTE temporary thing until all the mess gets cleared
      - run: rm -rf ./* ./.git ./.github
